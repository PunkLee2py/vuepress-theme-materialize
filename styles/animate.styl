/* ============ Configs ============ */
$DURATION = 0.3
$INOUT = 'In', 'Out'
$DIRECTIONS = 'Up', 'Down', 'Left', 'Right'

/* ========= Util Function ========= */
resolveTranslate3d(i, d, val = 100, $i = $INOUT, $d = $DIRECTIONS)
    if (d == $d[0])
        if (i == $i[0])
            translate3d(0, val px, 0)
        else
            translate3d(0, -(val) px, 0)
    else if (d == $d[1])
        if (i == $i[0])
            translate3d(0, -(val) px, 0)
        else
            translate3d(0, val px, 0)
    else if (d == $d[2])
        translate3d(-(val) px, 0, 0)
    else if (d == $d[3])
        translate3d(val px, 0, 0)

makeClasses(pre, sec = '', thi = '', dur = $DURATION, mode = both)
    .{pre}{sec}{thi}
        animation-name: pre + sec + thi
        animation-duration: dur s
        animation-fill-mode: mode

/* ====================================
========== Delay && Duration ==========
==================================== */
for i in 1 .. 100
    .delay-{i}
        _delay = floor((i * 0.1) s, 2)
        animation-delay: _delay !important

    .duration-{i}
        _duration = floor((i * 0.1) s, 2)
        animation-duration: _duration !important

/* ====================================
=============== ANIMATE ===============
◐:[In,Out] ⇅:[Up,Down] ⇆:[Left,Right] b:[Big]
==================================== */
/* fade: ◐⇅⇆b */
for inout in $INOUT
    @keyframes fade{inout}
        0%
            if (inout == $INOUT[0])
                opacity: 0
            else
                opacity: 1

        to
            if (inout == $INOUT[0])
                opacity: 1
            else
                opacity: 0

    makeClasses(fade, inout)

    for direction in $DIRECTIONS
        @keyframes fade{inout}{direction}
            _transform = resolveTranslate3d(inout, direction)

            0%
                if (inout == $INOUT[0])
                    opacity: 0
                    transform: _transform
                else
                    opacity: 1

            to
                if (inout == $INOUT[0])
                    opacity: 1
                    transform: translateZ(0)
                else
                    opacity: 0
                    transform: _transform

        makeClasses(fade, inout, direction)
        bigDirection = direction + 'Big'

        @keyframes fade{inout}{bigDirection}
            _transform = resolveTranslate3d(inout, direction, 1000)

            0%
                if (inout == $INOUT[0])
                    opacity: 0
                    transform: _transform
                else
                    opacity: 1

            to
                if (inout == $INOUT[0])
                    opacity: 1
                    transform: translateZ(0)
                else
                    opacity: 0
                    transform: _transform

        makeClasses(fade, inout, bigDirection)

/* slide: ⇅⇆b */
for inout in $INOUT
    for direction in $DIRECTIONS
        @keyframes slide{inout}{direction}
            _transform = resolveTranslate3d(inout, direction)

            0%
                if (inout == $INOUT[0])
                    visibility: visible
                    transform: _transform
                else
                    transform: translateZ(0)

            to
                if (inout == $INOUT[0])
                    transform: translateZ(0)
                else
                    visibility: hidden
                    transform: _transform

        makeClasses(slide, inout, direction)
        bigDirection = direction + 'Big'

        @keyframes slide{inout}{bigDirection}
            _transform = resolveTranslate3d(inout, direction, 1000)

            0%
                if (inout == $INOUT[0])
                    visibility: visible
                    transform: _transform
                else
                    transform: translateZ(0)

            to
                if (inout == $INOUT[0])
                    transform: translateZ(0)
                else
                    visibility: hidden
                    transform: _transform

        makeClasses(slide, inout, bigDirection)

/* bounce: ◐⇅⇆ */
for inout in $INOUT
    @keyframes bounce{inout}
        if (inout == $INOUT[0])
            0%, 20%, 40%, 60%, 80%, to
                animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1)

            0%
                opacity: 0
                transform: scale3d(0.3, 0.3, 0.3)

            20%
                transform: scale3d(1.1, 1.1, 1.1)

            40%
                transform: scale3d(0.9, 0.9, 0.9)

            60%
                opacity: 1
                transform: scale3d(1.03, 1.03, 1.03)

            80%
                transform: scale3d(0.97, 0.97, 0.97)
        else
            20%
                transform: scale3d(0.9, 0.9, 0.9)

            50%, 55%
                opacity: 1
                transform: scale3d(1.1, 1.1, 1.1)

        to
            if (inout == $INOUT[0])
                opacity: 1
                transform: scaleX(1)
            else
                opacity: 0
                transform: scale3d(0.3, 0.3, 0.3)

    makeClasses(bounce, inout, dur: 0.75)

    for direction in $DIRECTIONS
        @keyframes bounce{inout}{direction}
            if (inout == $INOUT[0])
                0%, 60%, 75%, 90%, to
                    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1)

                0%
                    opacity: 0
                    transform: resolveTranslate3d(inout, direction, val: 3000)

                60%
                    opacity: 1

                    if (direction == $DIRECTIONS[0])
                        transform: translate3d(0, -20px, 0) scaleY(0.9)
                    else if (direction == $DIRECTIONS[1])
                        transform: translate3d(0, 25px, 0) scaleY(0.9)
                    else if (direction == $DIRECTIONS[2])
                        transform: translate3d(25px, 0, 0) scaleX(1)
                    else if (direction == $DIRECTIONS[3])
                        transform: translate3d(-25px, 0, 0) scaleX(1)

                75%
                    transform: resolveTranslate3d(inout, direction, val: 15)

                90%
                    if (direction == $DIRECTIONS[0] || (direction == $DIRECTIONS[1]))
                        _scale = 0 0.985
                    else if (direction == $DIRECTIONS[2] || (direction == $DIRECTIONS[3]))
                        _scale = 0 0.995

                    transform: resolveTranslate3d(inout, direction, val: 5) scale(_scale)

                to
                    transform: translateZ(0)
            else
                20%
                    if (direction == $DIRECTIONS[0])
                        transform: translate3d(0, -10px, 0) scaleY(0.985)
                    else if (direction == $DIRECTIONS[1])
                        transform: translate3d(0, 10px, 0) scaleY(0.985)
                    else if (direction == $DIRECTIONS[2])
                        opacity: 1
                        transform: translate3d(20px, 0, 0) scaleX(0.9)
                    else if (direction == $DIRECTIONS[3])
                        opacity: 1
                        transform: translate3d(-20px, 0, 0) scaleX(0.9)

                40%, 45%
                    opacity: 1

                    if (direction == $DIRECTIONS[0])
                        transform: translate3d(0, 20px, 0) scaleY(0.9)
                    else if (direction == $DIRECTIONS[1])
                        transform: translate3d(0, -20px, 0) scaleY(0.9)

                to
                    opacity: 0

                    if (direction == $DIRECTIONS[0] || (direction == $DIRECTIONS[1]))
                        _scale = 0, 3
                    else if (direction == $DIRECTIONS[2] || (direction == $DIRECTIONS[3]))
                        _scale = 2, 0

                    transform: resolveTranslate3d(inout, direction, val: 2000) scale(_scale)

        makeClasses(bounce, inout, direction, dur: 0.75)

/* zoom: ◐⇅⇆ */
for inout in $INOUT
    @keyframes zoom{inout}
        0%
            if (inout == $INOUT[0])
                opacity: 0
                transform: scale3d(0.3, 0.3, 0.3)
            else
                opacity: 1

        50%
            if (inout == $INOUT[0])
                opacity: 1
            else
                opacity: 0
                transform: scale3d(0.3, 0.3, 0.3)

        if (inout == 'Out')
            to
                opacity: 0

    makeClasses(zoom, inout)

    for direction in $DIRECTIONS
        @keyframes zoom{inout}{direction}
            if (inout == $INOUT[0])
                0%
                    opacity: 0
                    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19)
                    transform: scale3d(0.1, 0.1, 0.1) resolveTranslate3d(inout, direction, val: 1000)

                60%
                    opacity: 1
                    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1)

                    if (direction == $DIRECTIONS[0] || (direction == $DIRECTIONS[1]))
                        _val = 60
                    else if (direction == $DIRECTIONS[2] || (direction == $DIRECTIONS[3]))
                        _val = 10

                    transform: scale3d(0.475, 0.475, 0.475) resolveTranslate3d(inout, direction, val: _val)
            else
                40%
                    opacity: 1
                    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19)

                    if (direction == $DIRECTIONS[0] || (direction == $DIRECTIONS[1]))
                        _val = 60
                    else if (direction == $DIRECTIONS[2] || (direction == $DIRECTIONS[3]))
                        _val = 42

                    transform: scale3d(0.475, 0.475, 0.475) resolveTranslate3d(inout, direction, val: _val)

                to
                    opacity: 0
                    animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1)
                    transform: scale3d(0.1, 0.1, 0.1) resolveTranslate3d(inout, direction, val: 2000)

        makeClasses(zoom, inout, direction, dur: 1)

/* back: ⇅⇆ */
for inout in $INOUT
    for direction in $DIRECTIONS
        @keyframes back{inout}{direction}
            _transform = resolveTranslate3d(inout, direction, val: 700)

            0%
                if (inout == $INOUT[0])
                    transform: _transform
                    opacity: 0.7
                else
                    transform: scale(1)
                    opacity: 1

            80%
                if (inout == $INOUT[0])
                    if (direction == $DIRECTIONS[0] || (direction == $DIRECTIONS[1]))
                        transform: translateY(0) scale(0.7)
                    else if (direction == $DIRECTIONS[2] || (direction == $DIRECTIONS[3]))
                        transform: translateX(0) scale(0.7)

                    opacity: 0.7

            20%
                if (inout == $INOUT[1])
                    transform: translateY(0) scale(0.7)
                    opacity: 0.7

            to
                if (inout == $INOUT[0])
                    transform: scale(1)
                    opacity: 1
                else
                    transform: _transform
                    opacity: 0.7

        makeClasses(back, inout, direction, dur: 0.75)

/* ========================== */
@keyframes pulse
    0%, to
        transform: scaleX(1)

    50%
        transform: scale3d(1.2, 1.2, 1.2)

@keyframes flash
    0%, 50%, to
        opacity: 1

    25%, 75%
        opacity: 0

@keyframes rotate
    from
        transform: rotate(0)

    to
        transform: rotate(360deg)

@keyframes shakeX
    0%, to
        transform: translateZ(0)

    10%, 30%, 50%, 70%, 90%
        transform: translate3d(-10px, 0, 0)

    20%, 40%, 60%, 80%
        transform: translate3d(10px, 0, 0)

@keyframes shakeY
    0%, to
        transform: translateZ(0)

    10%, 30%, 50%, 70%, 90%
        transform: translate3d(0, -10px, 0)

    20%, 40%, 60%, 80%
        transform: translate3d(0, 10px, 0)

@keyframes tada
    0%
        transform: scaleX(1)

    10%, 20%
        transform: scale3d(0.9, 0.9, 0.9) rotate(-3deg)

    30%, 50%, 70%, 90%
        transform: scale3d(1.1, 1.1, 1.1) rotate(3deg)

    40%, 60%, 80%
        transform: scale3d(1.1, 1.1, 1.1) rotate(-3deg)

    to
        transform: scaleX(1)

@keyframes jello
    from, 11.1%, to
        -webkit-transform: translate3d(0, 0, 0)
        transform: translate3d(0, 0, 0)

    22.2%
        -webkit-transform: skewX(-12.5deg) skewY(-12.5deg)
        transform: skewX(-12.5deg) skewY(-12.5deg)

    33.3%
        -webkit-transform: skewX(6.25deg) skewY(6.25deg)
        transform: skewX(6.25deg) skewY(6.25deg)

    44.4%
        -webkit-transform: skewX(-3.125deg) skewY(-3.125deg)
        transform: skewX(-3.125deg) skewY(-3.125deg)

    55.5%
        -webkit-transform: skewX(1.5625deg) skewY(1.5625deg)
        transform: skewX(1.5625deg) skewY(1.5625deg)

    66.6%
        -webkit-transform: skewX(-0.78125deg) skewY(-0.78125deg)
        transform: skewX(-0.78125deg) skewY(-0.78125deg)

    77.7%
        -webkit-transform: skewX(0.390625deg) skewY(0.390625deg)
        transform: skewX(0.390625deg) skewY(0.390625deg)

    88.8%
        -webkit-transform: skewX(-0.1953125deg) skewY(-0.1953125deg)
        transform: skewX(-0.1953125deg) skewY(-0.1953125deg)

@keyframes swing
    20%
        -webkit-transform: rotate3d(0, 0, 1, 15deg)
        transform: rotate3d(0, 0, 1, 15deg)

    40%
        -webkit-transform: rotate3d(0, 0, 1, -10deg)
        transform: rotate3d(0, 0, 1, -10deg)

    60%
        -webkit-transform: rotate3d(0, 0, 1, 5deg)
        transform: rotate3d(0, 0, 1, 5deg)

    80%
        -webkit-transform: rotate3d(0, 0, 1, -5deg)
        transform: rotate3d(0, 0, 1, -5deg)

    to
        -webkit-transform: rotate3d(0, 0, 1, 0deg)
        transform: rotate3d(0, 0, 1, 0deg)

@keyframes bounce
    from, 20%, 53%, 80%, to
        -webkit-animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1)
        animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1)
        -webkit-transform: translate3d(0, 0, 0)
        transform: translate3d(0, 0, 0)

    40%, 43%
        -webkit-animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06)
        animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06)
        -webkit-transform: translate3d(0, -30px, 0)
        transform: translate3d(0, -30px, 0)

    70%
        -webkit-animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06)
        animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06)
        -webkit-transform: translate3d(0, -15px, 0)
        transform: translate3d(0, -15px, 0)

    90%
        -webkit-transform: translate3d(0, -4px, 0)
        transform: translate3d(0, -4px, 0)

@keyframes rubberBand
    from
        -webkit-transform: scale3d(1, 1, 1)
        transform: scale3d(1, 1, 1)

    30%
        -webkit-transform: scale3d(1.25, 0.75, 1)
        transform: scale3d(1.25, 0.75, 1)

    40%
        -webkit-transform: scale3d(0.75, 1.25, 1)
        transform: scale3d(0.75, 1.25, 1)

    50%
        -webkit-transform: scale3d(1.15, 0.85, 1)
        transform: scale3d(1.15, 0.85, 1)

    65%
        -webkit-transform: scale3d(0.95, 1.05, 1)
        transform: scale3d(0.95, 1.05, 1)

    75%
        -webkit-transform: scale3d(1.05, 0.95, 1)
        transform: scale3d(1.05, 0.95, 1)

    to
        -webkit-transform: scale3d(1, 1, 1)
        transform: scale3d(1, 1, 1)

@keyframes wobble
    from
        -webkit-transform: translate3d(0, 0, 0)
        transform: translate3d(0, 0, 0)

    15%
        -webkit-transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg)
        transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg)

    30%
        -webkit-transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg)
        transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg)

    45%
        -webkit-transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg)
        transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg)

    60%
        -webkit-transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg)
        transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg)

    75%
        -webkit-transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg)
        transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg)

    to
        -webkit-transform: translate3d(0, 0, 0)
        transform: translate3d(0, 0, 0)

for name in pulse flash rotate shakeX shakeY tada jello swing bounce rubberBand wobble
    makeClasses(name)

/* ============= Other ============= */
.animate_a
    position: relative
    display: inline-block

    a
        padding-bottom: 0.3rem

    a:after
        position: absolute
        content: ''
        left: 0
        bottom: 0
        width: 0
        height: 2px
        background-color: var(--accentColor)
        transition: all unit($transitionTime, 's') ease-in-out

    a:hover:after
        width: 100%

.animate_hover:hover
    animation: $animateHover unit($transitionTime * 4, 's') linear infinite

.animate_text_shadow
    position: relative
    text-shadow: -3px -3px var(--relativeTextColor), -2px -2px var(--textColor)
    -webkit-text-fill-color: transparent
    -webkit-background-clip: text
    background-image: -webkit-linear-gradient(-45deg, var(--accentColor) 25%, rgba(255, 255, 255, 0) 25%, rgba(255, 255, 255, 0) 50%, var(--accentColor) 50%, var(--accentColor) 75%, rgba(255, 255, 255, 0.5) 75%, rgba(255, 255, 255, 0))
    background-size: 150px 150px
    animation: text_shadow_r unit($transitionTime * 10, 's') infinite linear

@keyframes text_shadow_l
    from
        background-position: 150px 0

    to
        background-position: 0 0

@keyframes text_shadow_r
    from
        background-position: -150px 0

    to
        background-position: 0 0

/* PULSE-animation */
@keyframes pulse-animation
    0%
        opacity: 1
        transform: scale(1)

    50%
        opacity: 0
        transform: scale(1.5)

    100%
        opacity: 0
        transform: scale(1.5)

after-pulse-animation()
    content: ''
    display: block
    position: absolute
    width: 100%
    height: 100%
    top: 0
    left: 0
    background-color: inherit
    border-radius: inherit
    transition: opacity 0.3s, transform 0.3s
    animation: pulse-animation 1s cubic-bezier(0.24, 0, 0.38, 1) infinite
    z-index: -1

.animate_pulse:after
    after-pulse-animation()

.animate_pulse_hover:hover:after
    after-pulse-animation()